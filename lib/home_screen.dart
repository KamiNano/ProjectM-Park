import 'package:flutter/material.dart';
import 'buy_ticket_screen.dart';
import 'buy_ride_ticket_screen.dart';
import 'map_screen.dart';
import 'my_tickets_screen.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  String _username = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...";

  @override
  void initState() {
    super.initState();
    _fetchUsername(); // ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å MySQL
  }

  // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  Future<void> _fetchUsername() async {
    var url = Uri.parse("http://10.0.2.2/amusement_park/get_username.php");
    var response = await http.get(url);

    if (response.statusCode == 200) {
      var data = jsonDecode(response.body);
      setState(() {
        _username = data["username"];
      });
    } else {
      setState(() {
        _username = "‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î";
      });
    }
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  Future<void> _updateUsername(String newUsername) async {
    var url = Uri.parse("http://10.0.2.2/amusement_park/update_username.php");

    var response = await http.post(
      url,
      headers: {"Content-Type": "application/json"},
      body: jsonEncode({"username": newUsername}),
    );

    if (response.statusCode == 200) {
      var data = jsonDecode(response.body);
      if (data["success"]) {
        setState(() {
          _username = newUsername;
        });
      }
    }
  }

  // ‡πÅ‡∏™‡∏î‡∏á Dialog ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠
  void _editUsername() {
    TextEditingController controller = TextEditingController(text: _username);

    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: Text("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"),
        content: TextField(
          controller: controller,
          decoration: InputDecoration(hintText: "‡∏õ‡πâ‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà"),
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: Text("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"),
          ),
          TextButton(
            onPressed: () {
              _updateUsername(controller.text);
              Navigator.pop(context);
            },
            child: Text("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("DinosaurPark"),
        actions: [
          Padding(
            padding: EdgeInsets.only(right: 16),
            child: GestureDetector(
              onTap: _editUsername,
              child: Row(
                children: [
                  Text(_username, style: TextStyle(fontSize: 18)),
                  SizedBox(width: 6),
                  Icon(Icons.edit, size: 18),
                ],
              ),
            ),
          ),
        ],
      ),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset(
              "assets/dinosaur_logo.png",
              width: 150,
              height: 150,
            ),
            SizedBox(height: 20),

            MenuButton("üéüÔ∏è ‡∏ã‡∏∑‡πâ‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏ß‡∏ô‡∏™‡∏ô‡∏∏‡∏Å", context, BuyParkTicketScreen()),
            MenuButton("üé¢ ‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô", context, BuyRideTicketScreen()),
            MenuButton("üó∫Ô∏è ‡∏î‡∏π‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà", context, ParkMapScreen()),
            MenuButton("üìÑ ‡∏ï‡∏±‡πã‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á", context, MyTicketsScreen()),
          ],
        ),
      ),
    );
  }

  Widget MenuButton(String text, BuildContext context, Widget page) {
    return Padding(
      padding: EdgeInsets.symmetric(vertical: 8),
      child: ElevatedButton(
        onPressed: () {
          Navigator.push(context, MaterialPageRoute(builder: (context) => page));
        },
        child: Text(text),
        style: ElevatedButton.styleFrom(minimumSize: Size(double.infinity, 50)),
      ),
    );
  }
}
